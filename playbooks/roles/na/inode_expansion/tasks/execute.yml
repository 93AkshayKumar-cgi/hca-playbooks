---

- set_fact:
      service_start_time: "{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}"

- name: "BLOCKnRESCUE: INODE_EXPANSION"
  block:  
      - name: "Scale volume inode count for {{ volume }}"
        vars:
          #files_used_pct: "{{ ( 100 * loop_arg['files_used'] | int / loop_arg['files_total'] | int ) | round }}"
          desired_files_total: "{{ ( loop_arg['files_used'] | int * 100 / pct_target ) | int }}"
          
        na_ontap_command:
          hostname: "{{ clusters[loop_arg['hostname']]['mgmt_ip'] }}"
          username: "{{ clusters[loop_arg['hostname']]['username'] }}"
          password: "{{ clusters[loop_arg['hostname']]['password'] }}"
          https:            true  #<-- move to standards
          validate_certs:   false  #<-- move to standards
          command: [ 'volume', 'modify', '-vserver', '{{ loop_arg["vserver"] }}', '-volume', '{{ loop_arg["volume"] }}', '-files', '{{ desired_files_total }}' ]
        #when:
        #  - files_used_pct | int > pct_thresh
        
        loop: "{{ args }}"
        loop_control:
          loop_var: loop_arg
        register: role_result
    
      - debug:
          var: role_result
  
  rescue:
      - name: 'Global playbook logging'
        include_role: 
            name: "log/global_logr"       

        vars:
            role_log:
              role: "INODE_EXPANSION"
              timestamp:
                  start_time: "{{service_start_time}}"
                  end_time: "{{ lookup('pipe', 'date +%Y-%m-%d@%H:%M:%S') }}"
              service_status: "failed"
              result: "{{role_result}}"  
            global_log:  "{{ global_log_msgs + [ role_log ] }}"

      - name: "STop the Play"
        meta: end_play   

-  name: add log msg
   vars:
      role_log:
         role: "INODE_EXPANSION"
         timestamp:
            start_time: "{{service_start_time}}"
            end_time: "{{ lookup('pipe', 'date +%Y-%m-%d@%H:%M:%S') }}"
         service_status: "success"
         result: "{{role_result}}"   
   set_fact:
      global_log_msgs:   "{{ global_log_msgs + [ role_log ] }}"

      